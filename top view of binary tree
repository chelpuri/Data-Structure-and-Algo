/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    static class Pair{
        TreeNode t;
        int x;
        Pair(TreeNode t, int x)
        {
            this.t=t;
            this.x=x;
        }
    }
    public ArrayList<Integer> solve(TreeNode A) {
        ArrayList<Integer> ans = new ArrayList<>();
        Queue< Pair > q=new LinkedList< Pair >();
        q.add(new Pair(A,0));
        
        TreeMap<Integer,Integer> tm=new TreeMap<>();
        
        if(A==null)
         return ans;
        
        while(!q.isEmpty())
        {
            Pair p=q.poll();
            TreeNode t=p.t;
            int x=p.x;
            if(tm.containsKey(x))
            {
                continue;
            }
            else
            {
                tm.put(x,t.val);
            }
            
            if(t.left!=null)
            q.add(new Pair(t.left,x-1));
            if(t.right!=null)
            q.add(new Pair(t.right,x+1));
        }
        
        for(int x:tm.keySet())
        {
            ans.add(tm.get(x));
        }
        return ans;
    }
    
}
