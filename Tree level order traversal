

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode A) {
        ArrayList<ArrayList<Integer>> ans=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>();
        ArrayList<Integer> x=new ArrayList<>();
        q.add(A);
        q.add(null);
        
        TreeNode node;
        while(!q.isEmpty())
        {
            node=q.remove();
            if(q.isEmpty() && node==null)
            {
                ans.add(new ArrayList<>(x));
                break;
            }
            if(node==null)
            {
                ans.add(new ArrayList<>(x));
                x.clear();
                q.add(null);
                continue;
            }
            x.add(node.val);
            if(node.left!=null){
             q.add(node.left);
            }
           if(node.right!=null){
             q.add(node.right);
            }
        }
        return ans;
    }
}
